@model FinalProject.Models.SummaryPage.SummaryInformation

@{
    ViewBag.Title = "Index";
}

<html>
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <style>
        body {
            font-family: Arial;
            color: white;
        }

        .split {
            height: 100%;
            width: 50%;
            position: fixed;
            z-index: 1;
            top: 0;
            overflow-x: hidden;
            padding-top: 20px;
        }

        .left {
            left: 0;
            background-color: #111;
        }

        .right {
            right: 0;
            background-color: #808080;
        }

        .centered {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            text-align: center;
        }

            .centered img {
                width: 300px;
                border-radius: 100%;
            }
    </style>
</head>
<body>

    <div class="split left">
        <div class="centered">
            <img src="http://image.tmdb.org/t/p/w185/@Model.PosterPath" alt="Car" onclick="buttonClickOptionOne()" id="inc1" style="width:100%">
            <p>You selected @Model.MovieTitle</p>
            <p>the battle is over</p>
            @{
                try // logic to switch between genre/popular depending on which cookies are present
                {
                    var get = HttpContext.Current.Request.Cookies["information"].Value;
                    if (get != null)
                    {

                        var result = Newtonsoft.Json.JsonConvert.DeserializeObject<List<string>>(get); //break the cookie into objects

                        <p>You fought over these movies:</p> //iterate list
                        foreach (var item in result)
                        {

                            <p>@item</p>

                        }

                        var c = new HttpCookie("information"); //erase cookie
                        c.Expires = DateTime.Now.AddDays(-1);
                        Response.Cookies.Add(c);
                    }
                }
                catch (Exception)
                {
                    var get1 = HttpContext.Current.Request.Cookies["genreinfo"].Value; //pulls cookie


                    if (get1 != null)
                    {

                        var result = Newtonsoft.Json.JsonConvert.DeserializeObject<List<string>>(get1); //break the cookie into objects


                        <p>You fought over these movies:</p> //iterate list
                        foreach (var item in result)
                        {

                            <p>@item</p>

                        }

                        var c = new HttpCookie("genreinfo"); //erase cookie
                        c.Expires = DateTime.Now.AddDays(-1);
                        Response.Cookies.Add(c);
                    }

                }



            }
        </div>
    </div>

    <div class="split right">
        <div class="centered">
            <p>To continue on to food, please enter your ZipCode</p>
            @using (Html.BeginForm("index", "food"))
            {
                <input type="text" name="zip" />
                <input type="submit" />
            }
        </div>
    </div>

</body>
</html>


@*<body>
    <div>
        Your movie selection is @Model.MovieTitle! Enjoy!
        <div class="col-lg-6">
            <img class="card-img-top" src="http://image.tmdb.org/t/p/w185/@Model.PosterPath" alt="Card image cap">
        </div>
    </div>
    <p>To continue on to food, please enter your ZipCode</p>
    @using (Html.BeginForm("index", "food"))
    {
        <input type="text" name="zip" />
        <input type="submit" />
    }

    @{
        try // logic to switch between genre/popular depending on which cookies are present
        {
            var get = HttpContext.Current.Request.Cookies["information"].Value;
            if (get != null)
            {

                var result = Newtonsoft.Json.JsonConvert.DeserializeObject<List<string>>(get); //break the cookie into objects

                <p>You fought over these movies:</p> //iterate list
                foreach (var item in result)
                {

                    <p>@item</p>

                }

                var c = new HttpCookie("information"); //erase cookie
                c.Expires = DateTime.Now.AddDays(-1);
                Response.Cookies.Add(c);
            }
        }
        catch (Exception)
        {
            var get1 = HttpContext.Current.Request.Cookies["genreinfo"].Value; //pulls cookie


            if (get1 != null)
            {

                var result = Newtonsoft.Json.JsonConvert.DeserializeObject<List<string>>(get1); //break the cookie into objects


                <p>You fought over these movies:</p> //iterate list
                foreach (var item in result)
                {

                    <p>@item</p>

                }

                var c = new HttpCookie("genreinfo"); //erase cookie
                c.Expires = DateTime.Now.AddDays(-1);
                Response.Cookies.Add(c);
            }

        }



    }
</body>*@